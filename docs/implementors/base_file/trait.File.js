(function() {var implementors = {};
implementors["epoll"] = [{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"epoll/struct.EpollFile.html\" title=\"struct epoll::EpollFile\">EpollFile</a>","synthetic":false,"types":["epoll::epoll_file::EpollFile"]}];
implementors["maturin"] = [{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/backend/struct.BackEndFile.html\" title=\"struct maturin::file::backend::BackEndFile\">BackEndFile</a>","synthetic":false,"types":["maturin::file::backend::BackEndFile"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/device/fat_file/struct.FatFile.html\" title=\"struct maturin::file::device::fat_file::FatFile\">FatFile</a>","synthetic":false,"types":["maturin::file::device::fat_file::FatFile"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/device/fd_dir/struct.FdDir.html\" title=\"struct maturin::file::device::fd_dir::FdDir\">FdDir</a>","synthetic":false,"types":["maturin::file::device::fd_dir::FdDir"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/pipe/struct.Pipe.html\" title=\"struct maturin::file::pipe::Pipe\">Pipe</a>","synthetic":false,"types":["maturin::file::pipe::Pipe"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/socket/struct.Socket.html\" title=\"struct maturin::file::socket::Socket\">Socket</a>","synthetic":false,"types":["maturin::file::socket::Socket"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/stdio/struct.Stdin.html\" title=\"struct maturin::file::stdio::Stdin\">Stdin</a>","synthetic":false,"types":["maturin::file::stdio::Stdin"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/stdio/struct.Stdout.html\" title=\"struct maturin::file::stdio::Stdout\">Stdout</a>","synthetic":false,"types":["maturin::file::stdio::Stdout"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/stdio/struct.Stderr.html\" title=\"struct maturin::file::stdio::Stderr\">Stderr</a>","synthetic":false,"types":["maturin::file::stdio::Stderr"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/vfs/null/struct.NullFile.html\" title=\"struct maturin::file::vfs::null::NullFile\">NullFile</a>","synthetic":false,"types":["maturin::file::vfs::null::NullFile"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/vfs/virt_dir/struct.VirtDir.html\" title=\"struct maturin::file::vfs::virt_dir::VirtDir\">VirtDir</a>","synthetic":false,"types":["maturin::file::vfs::virt_dir::VirtDir"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/vfs/virt_file/struct.VirtFile.html\" title=\"struct maturin::file::vfs::virt_file::VirtFile\">VirtFile</a>","synthetic":false,"types":["maturin::file::vfs::virt_file::VirtFile"]},{"text":"impl <a class=\"trait\" href=\"base_file/trait.File.html\" title=\"trait base_file::File\">File</a> for <a class=\"struct\" href=\"maturin/file/vfs/zero/struct.ZeroFile.html\" title=\"struct maturin::file::vfs::zero::ZeroFile\">ZeroFile</a>","synthetic":false,"types":["maturin::file::vfs::zero::ZeroFile"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()